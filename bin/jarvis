#!/usr/bin/env ruby
$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])
require 'jarvis'
require 'jarvis/cli'

HELP = "Jarvis is a CLI for compiling and executing Java. It's goal is to
make working with Java outside of an IDE easy.".green + "

  Usage:
    jarvis -v [--version]
    jarvis -h [--help]
    jarvis command [args...] [flags...]

  Example:
    jarvis new ProjectName
    jarvis run ClassName
    jarvis compile

Report any bugs to github.com/Epicgrim/jarvis/issues
coded by " + "epicgrim".magenta

module Jarvis
  class CLI

    def initialize
      @compiler = Jarvis::Compiler.new ["src", "test"]
    end

    # Commands

    def new( project_name )
      if File.exists? project_name
        puts "File already exists: #{project_name}".red
        exit
      end
      Dir.mkdir project_name
      Dir.mkdir File.join(project_name, 'src')
      Dir.mkdir File.join(project_name, 'test')
      Dir.mkdir File.join(project_name, 'bin')
    end

    def create( name )
      if File.exists? File.join("src", "#{name}.java")
        puts "File already exists: #{name}.java"
        exit
      end
      File.open(File.join("src", "#{name}.java"), 'w') do |f|
        f.write "class #{name} { }"
      end
    end

    def compile
      @compiler.compile
    end

    def run( klass )
      @compiler.run klass
    end

    def help
      puts HELP
    end

    # Flags

    @flags = { }
    @flags['v'] = lambda { puts VERSION; exit; }
    @flags['h'] = lambda { puts HELP; exit; }

  end
end

Jarvis::CLI.start