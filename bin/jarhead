#!/usr/bin/env ruby

require 'thor'

class Jarhead < Thor
  include Thor::Actions

  desc "new [PROJECT_NAME]", "create a new Java project"
  def new( name )
    if File.directory? name
      say "Folder #{name} already exists."
      exit
    end
    Dir.mkdir name
    Dir.mkdir File.join(name, 'src')
    Dir.mkdir File.join(name, 'test')
  end

  desc "test", "recursively run all the test classes in ./test"
  def test
    ensure_bin
    compile = system "javac -d bin src/*.java test/*.java"
    if compile
      Dir.foreach('test') do |f|
        next if f == '.' or f == '..'
        say ".............................."
        say "Testing #{File.basename(f, '.*')}"
        say ".............................."
        system "java -cp bin #{File.basename(f, '.*')}"
      end
    end
  end

  desc "exec [CLASS]", "compile src and run the given class"
  def exec( klass )
    ensure_bin
    say ".............................."
    say "Running #{klass}"
    say ".............................."
    compile = system "javac -d bin src/*.java"
    system "java -cp bin #{klass}" if compile
  end


  no_tasks do

    def ensure_bin
      Dir.mkdir "bin" unless File.directory? 'bin'
    end

  end

end

Jarhead.start